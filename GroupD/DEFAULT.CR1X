'Group D CR1000X Series Datalogger
'Copyright (c) 2022 Washington State University. Adapted from group C 
'May 2022
'Patrick O'Keeffe <pokeeffe@wsu.edu>
'
'D5  40m from SE corner
'  CSAT3B sn 1124 (SDM 9)
'  LI-7541 sn 75H-2950 (SDM 8) w/ LI-7550 sn AIU-1908
'  optional: fine-wire thermocouple
'D4  30m from SE corner
'  CSAT3B sn 1125 (SDM 3)
'  LI-7500 sn 75H-1709 (SDM 7)
'  optional: fine-wire thermocouple
'D3  20m from SE corner
'  CSAT3B sn 1126 (SDM 2)
'  LI-7540 sn 75H-2069 (SDM 5) w/ LI-7550 sn AIU-
'  optional: fine-wire thermocouple
'D2  10m from SE corner
'  CSAT3B sn 1128 (SDM 1)
'  LI-7541 sn 75H-3039 (SDM 4) w/ LI-7550 sn AIU-2092
'  GPS16X-HVS + CR1000X
'  optional: fine-wire thermocouple
'D1  under tall tower sensors
'  CSAT3B sn 1489 (SDM 10)
'  optional: fine-wire thermocouple

'Abbreviations in comments and variables
'CR1K   CR1000X
'CSAT   CSAT3A or CSAT3B
'sonic  CSAT3A or CSAT3B
'CS6XX  CS616, CS650, or CS655
'CS65X  CS650 or CS655
'cumul  cumulative
'dia    diameter
'diag   dignosis
'dir    direction
'dist   distance
'flg    flag
'FP     footprint
'Freq   frequency
'FW     FW05, FW1, or FW3. FW is an abbreviation for fine wire thermocouple
'intrst interest
'IRGA   LI7500, LI7500A, or LI7500RS InfraRed Gas Analyzer
'nmbr   number
'pct    percent
'Pyran  pyranometer
'RH     relative humidity
'rng    range
'QC     quality control or quality classification
'shf    soil heat flux
'shfp   soil heat flux plate
'sig    signal
'strgth strength
'within win
'wnd    wind
'wtr    water
'hfp01xx HFP01 or HFP01SC soil heat flux plate sensor

'*** Unit Definitions ***
'SYMBOL      UNIT
'C           Celsius
'degrees     angle degrees
'frac_v_wtr  Fraction volumetric water content
'g           grams
'J           Joules
'Hz          Hertz
'kg          kilograms
'kPa         kilopascals
'm           meters
'mg          milligrams
'mmol        millimole
'mol         mole
'ms          millisecond
's           seconds
'umol        micromoles
'usecond     microsecond
'V           volts
'W           Watts


PipeLineMode
SDMBeginPort(C5)  'Use C5, C6, and C7 as the SMD port since C1 is used for GPS PPS.

'---------------------------------------------
' Declare Constants
'---------------------------------------------
Const SCN_INTV                   = 100           'Unique: measurement rate 100 ms (10 Hz), 200 ms (5 Hz), or 1000 ms (1 Hz)
Const SLW_SCN_INTV               = 5000          'Unique: slow sequence measurement rate (ms) >3000 ms and <6000ms (Note: SDI-12 sensors too slow for sub-second intervals)
Const OUTPUT_INTV                = 5             'Unique: online flux data output interval (minutes).
Const DAY_RMET_CRD               = 30            'Unique: number of days of Flux and Flux_Notes table data to store in each file on the card.  Number of files stored depends on card size.
Const DAY_TSRS_CRD               = 1             'Unique: number of days of Time_Series table data to store in each file on the card (days). Number of files stored depends on card size.
Const SDM_PER                    = 30            'Unique: default SDM clock speed (uS).

Const ANALOG_INTEGRATION As Long = 5000         'Unique: slowsequence analog measurement integration time, _60Hz (e.g. in US, Canada, etc.) or _50Hz (e.g. in Europe, China, etc.)

Const SCAN_BUFFER_SIZE           = 290*INT (1000/SCN_INTV) 'Compute a 290-second scan buffer (The buffer less than 5 minutes is required because of 5-minute interval for data tables used in QC.

Const NMBR_DAY_CPU               = 7             'Number of days for flux data to store on the CPU.
Const FLUX_SIZE_CPU              = Ceiling ((NMBR_DAY_CPU*1440)/OUTPUT_INTV) 'Size of flux data table on CPU [(days*1440 minutes/day)/(minutes/record)] = records].

Const R       = 8.3143e-3          'Universal gas constant [kPa m^3/(K mol)]

'CSAT3B three dimensional sonic anemometer
Const CSAT_SDM_ADDR_D5           = 9           'Unique: SDM address for CSAT3B @ D5
Const CSAT_SDM_ADDR_D4           = 3           'Unique: SDM address for CSAT3B @ D4
Const CSAT_SDM_ADDR_D3           = 2           'Unique: SDM address for CSAT3B @ D3
Const CSAT_SDM_ADDR_D2           = 1           'Unique: SDM address for CSAT3B @ D2
Const CSAT_SDM_ADDR_D1           = 10           'Unique: SDM address for CSAT3B @ D1

'LI7500RS infrared CO2/H2O gas analyzer
Const IRGA_SDM_ADDR_D5           = 8           'Unique: SDM address for IRGA @ D5
Const IRGA_SDM_ADDR_D4           = 7           'Unique: SDM address for IRGA @ D4
Const IRGA_SDM_ADDR_D3           = 5           'Unique: SDM address for IRGA @ D3
Const IRGA_SDM_ADDR_D2           = 4           'Unique: SDM address for IRGA @ D2
'Const IRGA_SDM_ADDR_D1           = 4           'No analyzer for tower D1


'FW3 fine-wire thermocouple                 matched sequentially: D1=DF 1, D2=DF 2, etc
Const FW_ANALOG_INPUT  = 1          'Starting differential analog input channel for FW

'GPS                                        x  1
Const GPS16X_COM = ComC1      'Serial port for GPS16X with PPS
Const UTC_OFFSET = -7        'local time offset from UTC, in hours
Const MAX_CLOCK_DRIFT = 0  'max clock drift permitted before setting clock, in msec


'--------------------------------------------------------
' Declare Variables, Aliases, and Units
'---------------------------------------------------------
'CSAT3B three dimensional sonic anemometer
Public sonic(25)                          'Hold sonic data aligned in scan with data from IRGA and/or
Alias  sonic(1) = Ux_D5
Alias  sonic(2) = Uy_D5
Alias  sonic(3) = Uz_D5
Alias  sonic(4) = Ts_D5
Alias  sonic(5) = diag_sonic_D5
Alias  sonic(6) = Ux_D4
Alias  sonic(7) = Uy_D4
Alias  sonic(8) = Uz_D4
Alias  sonic(9) = Ts_D4
Alias  sonic(10) = diag_sonic_D4
Alias  sonic(11) = Ux_D3
Alias  sonic(12) = Uy_D3
Alias  sonic(13) = Uz_D3
Alias  sonic(14) = Ts_D3
Alias  sonic(15) = diag_sonic_D3
Alias  sonic(16) = Ux_D2
Alias  sonic(17) = Uy_D2
Alias  sonic(18) = Uz_D2
Alias  sonic(19) = Ts_D2
Alias  sonic(20) = diag_sonic_D2
Alias  sonic(21) = Ux_D1
Alias  sonic(22) = Uy_D1
Alias  sonic(23) = Uz_D1
Alias  sonic(24) = Ts_D1
Alias  sonic(25) = diag_sonic_D1
Units  Ux_D5 = m/s
Units  Uy_D5 = m/s
Units  Uz_D5 = m/s
Units  Ts_D5 = degC
Units  diag_sonic_D5 = unitless
Units  Ux_D4 = m/s
Units  Uy_D4 = m/s
Units  Uz_D4 = m/s
Units  Ts_D4 = degC
Units  diag_sonic_D4 = unitless
Units  Ux_D3 = m/s
Units  Uy_D3 = m/s
Units  Uz_D3 = m/s
Units  Ts_D3 = degC
Units  diag_sonic_D3 = unitless
Units  Ux_D2 = m/s
Units  Uy_D2 = m/s
Units  Uz_D2 = m/s
Units  Ts_D2 = degC
Units  diag_sonic_D2 = unitless
Units  Ux_D1 = m/s
Units  Uy_D1 = m/s
Units  Uz_D1 = m/s
Units  Ts_D1 = degC
Units  diag_sonic_D1 = unitless

'CSAT3B monitor outputs
Public monitor(20)
Alias  monitor(1)  = Btemp_D5     'Board Temperature
Alias  monitor(2)  = Bhumidity_D5 'Board Relative Humidity
Alias  monitor(3)  = Ipitch_D5    'Inclinometer Pitch
Alias  monitor(4)  = Iroll_D5     'Inclinometer Roll
Alias  monitor(5)  = Btemp_D4     'Board Temperature
Alias  monitor(6)  = Bhumidity_D4 'Board Relative Humidity
Alias  monitor(7)  = Ipitch_D4    'Inclinometer Pitch
Alias  monitor(8)  = Iroll_D4     'Inclinometer Roll
Alias  monitor(9)  = Btemp_D3     'Board Temperature
Alias  monitor(10) = Bhumidity_D3 'Board Relative Humidity
Alias  monitor(11) = Ipitch_D3    'Inclinometer Pitch
Alias  monitor(12) = Iroll_D3     'Inclinometer Roll
Alias  monitor(13) = Btemp_D2     'Board Temperature
Alias  monitor(14) = Bhumidity_D2 'Board Relative Humidity
Alias  monitor(15) = Ipitch_D2    'Inclinometer Pitch
Alias  monitor(16) = Iroll_D2     'Inclinometer Roll
Alias  monitor(17) = Btemp_D1     'Board Temperature
Alias  monitor(18) = Bhumidity_D1 'Board Relative Humidity
Alias  monitor(19) = Ipitch_D1    'Inclinometer Pitch
Alias  monitor(20) = Iroll_D1     'Inclinometer Roll
Units  Btemp_D5     = degC
Units  Bhumidity_D5 = %
Units  Ipitch_D5    = deg
Units  Iroll_D5     = deg
Units  Btemp_D4     = degC
Units  Bhumidity_D4 = %
Units  Ipitch_D4    = deg
Units  Iroll_D4     = deg
Units  Btemp_D3     = degC
Units  Bhumidity_D3 = %
Units  Ipitch_D3    = deg
Units  Iroll_D3     = deg
Units  Btemp_D2     = degC
Units  Bhumidity_D2 = %
Units  Ipitch_D2    = deg
Units  Iroll_D2     = deg
Units  Btemp_D1     = degC
Units  Bhumidity_D1 = %
Units  Ipitch_D1    = deg
Units  Iroll_D1     = deg

'CSAT3B diagnostic flags
Public diag_bits_sonic(45) As Boolean
Alias diag_bits_sonic(1)  = FLowAmp_D5      'Low Amplitude Flag
Alias diag_bits_sonic(2)  = FHighAmp_D5     'High Amplitude Flag
Alias diag_bits_sonic(3)  = FTracking_D5    'Tracking Flag
Alias diag_bits_sonic(4)  = FHighDeltaC_D5  'High Delta Speed of Sound Flag
Alias diag_bits_sonic(5)  = FAcq_D5         'Acquiring Flag
Alias diag_bits_sonic(6)  = FLowVolt_D5     'Low Supply Voltage Flag
Alias diag_bits_sonic(7)  = FMemErr_D5      'Memory Error Flag
Alias diag_bits_sonic(8)  = FADCSkip_D5     'ADC Clock Error Flag
Alias diag_bits_sonic(9)  = FTrigErr_D5     'Trigger Error Flag
Alias diag_bits_sonic(10) = FLowAmp_D4      'Low Amplitude Flag
Alias diag_bits_sonic(11) = FHighAmp_D4     'High Amplitude Flag
Alias diag_bits_sonic(12) = FTracking_D4    'Tracking Flag
Alias diag_bits_sonic(13) = FHighDeltaC_D4  'High Delta Speed of Sound Flag
Alias diag_bits_sonic(14) = FAcq_D4         'Acquiring Flag
Alias diag_bits_sonic(15) = FLowVolt_D4     'Low Supply Voltage Flag
Alias diag_bits_sonic(16) = FMemErr_D4      'Memory Error Flag
Alias diag_bits_sonic(17) = FADCSkip_D4     'ADC Clock Error Flag
Alias diag_bits_sonic(18) = FTrigErr_D4     'Trigger Error Flag
Alias diag_bits_sonic(19) = FLowAmp_D3      'Low Amplitude Flag
Alias diag_bits_sonic(20) = FHighAmp_D3     'High Amplitude Flag
Alias diag_bits_sonic(21) = FTracking_D3    'Tracking Flag
Alias diag_bits_sonic(22) = FHighDeltaC_D3  'High Delta Speed of Sound Flag
Alias diag_bits_sonic(23) = FAcq_D3         'Acquiring Flag
Alias diag_bits_sonic(24) = FLowVolt_D3     'Low Supply Voltage Flag
Alias diag_bits_sonic(25) = FMemErr_D3      'Memory Error Flag
Alias diag_bits_sonic(26) = FADCSkip_D3     'ADC Clock Error Flag
Alias diag_bits_sonic(27) = FTrigErr_D3     'Trigger Error Flag
Alias diag_bits_sonic(28) = FLowAmp_D2      'Low Amplitude Flag
Alias diag_bits_sonic(29) = FHighAmp_D2     'High Amplitude Flag
Alias diag_bits_sonic(30) = FTracking_D2    'Tracking Flag
Alias diag_bits_sonic(31) = FHighDeltaC_D2  'High Delta Speed of Sound Flag
Alias diag_bits_sonic(32) = FAcq_D2         'Acquiring Flag
Alias diag_bits_sonic(33) = FLowVolt_D2     'Low Supply Voltage Flag
Alias diag_bits_sonic(34) = FMemErr_D2      'Memory Error Flag
Alias diag_bits_sonic(35) = FADCSkip_D2     'ADC Clock Error Flag
Alias diag_bits_sonic(36) = FTrigErr_D2     'Trigger Error Flag
Alias diag_bits_sonic(37) = FLowAmp_D1      'Low Amplitude Flag
Alias diag_bits_sonic(38) = FHighAmp_D1     'High Amplitude Flag
Alias diag_bits_sonic(39) = FTracking_D1    'Tracking Flag
Alias diag_bits_sonic(40) = FHighDeltaC_D1  'High Delta Speed of Sound Flag
Alias diag_bits_sonic(41) = FAcq_D1         'Acquiring Flag
Alias diag_bits_sonic(42) = FLowVolt_D1     'Low Supply Voltage Flag
Alias diag_bits_sonic(43) = FMemErr_D1      'Memory Error Flag
Alias diag_bits_sonic(44) = FADCSkip_D1     'ADC Clock Error Flag
Alias diag_bits_sonic(45) = FTrigErr_D1     'Trigger Error Flag

'infrared CO2/H2O gas analyzer
Dim LI7500(4)  'Working Variable for LI7500
Public irga(16)
Alias irga(1)  = co2_D5         'LI-7500RS/7550
Alias irga(2)  = h2o_D5
Alias irga(3)  = sig_irga_D5
Alias irga(4)  = Press_irga_D5
Alias irga(5)  = co2_D4         'LI-7500
Alias irga(6)  = h2o_D4
Alias irga(7)  = sig_irga_D4
Alias irga(8)  = Press_irga_D4
Alias irga(9)  = co2_D3         'LI-7500RS/7550
Alias irga(10) = h2o_D3
Alias irga(11) = sig_irga_D3
Alias irga(12) = Press_irga_D3
Alias irga(13) = co2_D2         'LI-7500RS/7550
Alias irga(14) = h2o_D2
Alias irga(15) = sig_irga_D2
Alias irga(16) = Press_irga_D2
Units co2_D5        = mg/m^3
Units h2o_D5        = g/m^3
Units Press_irga_D5 = kPa
Units sig_irga_D5  = unitless
Units co2_D4        = mg/m^3
Units h2o_D4        = g/m^3
Units Press_irga_D4 = kPa
Units sig_irga_D4  = unitless
Units co2_D3        = mg/m^3
Units h2o_D3        = g/m^3
Units Press_irga_D3 = kPa
Units sig_irga_D3  = unitless
Units co2_D2        = mg/m^3
Units h2o_D2        = g/m^3
Units Press_irga_D2 = kPa
Units sig_irga_D2  = unitless

Public mco2(4)
Alias  mco2(1)  = mco2_D5
Alias  mco2(2)  = mco2_D4
Alias  mco2(3)  = mco2_D3
Alias  mco2(4)  = mco2_D2
Units  mco2     = ppm

'FW3 fine-wire thermocouple                 x  5
'HINT maintain sequential order to simplify wiring, tower D1..5 = input DF1..5
'but reverse order in data tables to be consistent with other variables
Public FW(5)
Alias  FW(1) = FW_D1
Alias  FW(2) = FW_D2
Alias  FW(3) = FW_D3
Alias  FW(4) = FW_D4
Alias  FW(5) = FW_D5
Units  FW = degC


'GPS                                        x  1
Dim nmea_sentence(2) As String * 100

Public gps_data(15)
Alias gps_data(1) = latitude_deg            'Degrees latitude (+ = East; - = West)
Alias gps_data(2) = latitude_min            'Decimal minutes latitude
Alias gps_data(3) = longitude_deg           'Degress longitude (+ = East; - = West)
Alias gps_data(4) = longitude_min           'Decimal minutes longitude
Alias gps_data(5) = speed                   'Speed
Alias gps_data(6) = course                  'Course over ground
Alias gps_data(7) = magnetic_variation      'Magnetic variation from true north (+ = East; - = West)
Alias gps_data(8) = fix_quality             'GPS fix quality: 0 = invalid, 1 = GPS, 2 = 'differential GPS, 6 = estimated
Alias gps_data(9) = nmbr_satellites         'Number of satellites used for fix
Alias gps_data(10) = altitude               'Antenna altitude
Alias gps_data(11) = pps                    'Elapsed ms since last pulse per second (PPS) from GPS
Alias gps_data(12) = dt_since_gprmc         'Time since last GPRMC string, normally less than '1 second
Alias gps_data(13) = gps_ready              'Counts from 0 to 10, 10 = ready
Alias gps_data(14) = max_clock_change       'Maximum value the clock was changed
Alias gps_data(15) = nmbr_clock_change      'Number of times the clock was changed
Units latitude_deg = degreesN
Units latitude_min = minutesN
Units longitude_deg = degreesE
Units longitude_min = minutesE
Units speed = m/s
Units course = degreesEofN
Units magnetic_variation = degreesEofN
Units fix_quality = unitless
Units nmbr_satellites = unitless
Units altitude = m
Units pps = ms
Units dt_since_gprmc = s
Units gps_ready = unitless
Units max_clock_change = ms
Units nmbr_clock_change = occurrences

'Battery voltage and panel temp
Public BattV
Public PTemp_C
Units  BattV = Volts
Units  PTemp_C = degC

Dim divisor                                 'Temporary variable used to find molar mixing ratio.
Dim diag_integer  As Long                   'Temporary variable used to break up the sonic warning flags
Dim disable_stats_sonic(10) As Boolean       'Intermediate processing sonic disable flags 
'(1) D5 any warning flag or NAN data
'(2) D5 any warning flag
'(3) D4 any warning flag or NAN data
'(4) D4 any warning flag
'(5) D3 any warning flag or NAN data
'(6) D3 any warning flag
'(7) D2 any warning flag or NAN data
'(8) D2 any warning flag
'(9) D1 any warning flag or NAN data
'(10) D1 any warning flag

'---------------------------------------------
' Define Output Data Tables
'---------------------------------------------
'Time series data
DataTable (Time_Series, TRUE, -1)
  DataInterval (0, SCN_INTV, mSec, 0)
  TableFile ("CRD:"&Status.SerialNumber(1,1)&".Time_Series_", 64, -1, 0, DAY_TSRS_CRD, Day, 0, 0)

  'sonic time series output
  Sample (25, sonic(1), IEEE4)

  'IRGA time series output
  Sample (16, irga(1),IEEE4)

  'FW time series output
  Sample (1, FW_D5, IEEE4)
  Sample (1, FW_D4, IEEE4)
  Sample (1, FW_D3, IEEE4)
  Sample (1, FW_D2, IEEE4)
  Sample (1, FW_D1, IEEE4)
EndTable


'Meterological data
DataTable (RMet_1Min, TRUE, -1)
  DataInterval (0,1,Min,10)
  TableFile ("CRD:"&Status.SerialNumber(1,1)&".Met_1Min", 64, -1, 0, DAY_RMET_CRD, Day, 0, 0)

  'FW3
  Average  (1, FW_D5, IEEE4,False)
  Average  (1, FW_D4, IEEE4,False)
  Average  (1, FW_D3, IEEE4,False)
  Average  (1, FW_D2, IEEE4,False)
  Average  (1, FW_D1, IEEE4,False)

  Average (1,PTemp_C,IEEE4,False)
  Average (1,BattV,IEEE4,False)
EndTable

'Status data
DataTable (Stats_30Min, TRUE, -1)
  DataInterval (0,30,Min,10)
  TableFile ("CRD:"&Status.SerialNumber(1,1)&".Stats_30Min", 64, -1, 0, DAY_RMET_CRD, Day, 0, 0)

  'FW3
  Average  (1, FW_D5, IEEE4,False)
  Average  (1, FW_D4, IEEE4,False)
  Average  (1, FW_D3, IEEE4,False)
  Average  (1, FW_D2, IEEE4,False)
  Average  (1, FW_D1, IEEE4,False)

  'CSATB Monitor
  Average (20,monitor(1),IEEE4,False)

  ' sonic flag
  Totalize (1,1,IEEE4,disable_stats_sonic(1))
  FieldNames ("csat_D5")
  Totalize (1,1,IEEE4,NOT (disable_stats_sonic(1) OR disable_stats_sonic(2)))
  FieldNames ("csat_warnings_D5")
  Totalize (1,1,IEEE4,NOT (FLowAmp_D5) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_LowAmp_Tot_D5")
  Totalize (1,1,IEEE4,NOT (FHighAmp_D5) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_HighAmp_Tot_D5")
  Totalize (1,1,IEEE4,NOT (FTracking_D5) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_Tracking_Tot_D5")
  Totalize (1,1,IEEE4,NOT (FHighDeltaC_D4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_HighDeltaC_Tot_D5")
  Totalize (1,1,IEEE4,NOT (FAcq_D5) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_Acq_Tot_D5")
  Totalize (1,1,IEEE4,NOT (FLowVolt_D5) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_LowVolt_Tot_D5")
  Totalize (1,1,IEEE4,NOT (FMemErr_D5) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_MemErr_Tot_D5")
  Totalize (1,1,IEEE4,NOT (FADCSkip_D5) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_ADCSkip_Tot_D5")
  Totalize (1,1,IEEE4,NOT (FTrigErr_D5) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_TrigErr_Tot_D5")

  Totalize (1,1,IEEE4,disable_stats_sonic(1))
  FieldNames ("csat_D4")
  Totalize (1,1,IEEE4,NOT (disable_stats_sonic(1) OR disable_stats_sonic(2)))
  FieldNames ("csat_warnings_D4")
  Totalize (1,1,IEEE4,NOT (FLowAmp_D4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_LowAmp_Tot_D4")
  Totalize (1,1,IEEE4,NOT (FHighAmp_D4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_HighAmp_Tot_D4")
  Totalize (1,1,IEEE4,NOT (FTracking_D4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_Tracking_Tot_D4")
  Totalize (1,1,IEEE4,NOT (FHighDeltaC_D4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_HighDeltaC_Tot_D4")
  Totalize (1,1,IEEE4,NOT (FAcq_D4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_Acq_Tot_D4")
  Totalize (1,1,IEEE4,NOT (FLowVolt_D4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_LowVolt_Tot_D4")
  Totalize (1,1,IEEE4,NOT (FMemErr_D4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_MemErr_Tot_D4")
  Totalize (1,1,IEEE4,NOT (FADCSkip_D4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_ADCSkip_Tot_D4")
  Totalize (1,1,IEEE4,NOT (FTrigErr_D4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_TrigErr_Tot_D4")

  Totalize (1,1,IEEE4,disable_stats_sonic(3))
  FieldNames ("csat_D3")
  Totalize (1,1,IEEE4,NOT (disable_stats_sonic(3) OR disable_stats_sonic(4)))
  FieldNames ("csat_warnings_D3")
  Totalize (1,1,IEEE4,NOT (FLowAmp_D3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_LowAmp_Tot_D3")
  Totalize (1,1,IEEE4,NOT (FHighAmp_D3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_HighAmp_Tot_D3")
  Totalize (1,1,IEEE4,NOT (FTracking_D3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_Tracking_Tot_D3")
  Totalize (1,1,IEEE4,NOT (FHighDeltaC_D3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_HighDeltaC_Tot_D3")
  Totalize (1,1,IEEE4,NOT (FAcq_D3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_Acq_Tot_D3")
  Totalize (1,1,IEEE4,NOT (FLowVolt_D3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_LowVolt_Tot_D3")
  Totalize (1,1,IEEE4,NOT (FMemErr_D3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_MemErr_Tot_D3")
  Totalize (1,1,IEEE4,NOT (FADCSkip_D3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_ADCSkip_Tot_D3")
  Totalize (1,1,IEEE4,NOT (FTrigErr_D3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_TrigErr_Tot_D3")

  Totalize (1,1,IEEE4,disable_stats_sonic(5))
  FieldNames ("csat_D2")
  Totalize (1,1,IEEE4,NOT (disable_stats_sonic(5) OR disable_stats_sonic(6)))
  FieldNames ("csat_warnings_D2")
  Totalize (1,1,IEEE4,NOT (FLowAmp_D2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_LowAmp_Tot_D2")
  Totalize (1,1,IEEE4,NOT (FHighAmp_D2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_HighAmp_Tot_D2")
  Totalize (1,1,IEEE4,NOT (FTracking_D2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_Tracking_Tot_D2")
  Totalize (1,1,IEEE4,NOT (FHighDeltaC_D2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_HighDeltaC_Tot_D2")
  Totalize (1,1,IEEE4,NOT (FAcq_D2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_Acq_Tot_D2")
  Totalize (1,1,IEEE4,NOT (FLowVolt_D2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_LowVolt_Tot_D2")
  Totalize (1,1,IEEE4,NOT (FMemErr_D2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_MemErr_Tot_D2")
  Totalize (1,1,IEEE4,NOT (FADCSkip_D2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_ADCSkip_Tot_D2")
  Totalize (1,1,IEEE4,NOT (FTrigErr_D2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_TrigErr_Tot_D2")

  Totalize (1,1,IEEE4,disable_stats_sonic(7))
  FieldNames ("csat_D1")
  Totalize (1,1,IEEE4,NOT (disable_stats_sonic(7) OR disable_stats_sonic(8)))
  FieldNames ("csat_warnings_D1")
  Totalize (1,1,IEEE4,NOT (FLowAmp_D1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_LowAmp_Tot_D1")
  Totalize (1,1,IEEE4,NOT (FHighAmp_D1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_HighAmp_Tot_D1")
  Totalize (1,1,IEEE4,NOT (FTracking_D1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_Tracking_Tot_D1")
  Totalize (1,1,IEEE4,NOT (FHighDeltaC_D1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_HighDeltaC_Tot_D1")
  Totalize (1,1,IEEE4,NOT (FAcq_D1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_Acq_Tot_D1")
  Totalize (1,1,IEEE4,NOT (FLowVolt_D1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_LowVolt_Tot_D1")
  Totalize (1,1,IEEE4,NOT (FMemErr_D1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_MemErr_Tot_D1")
  Totalize (1,1,IEEE4,NOT (FADCSkip_D1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_ADCSkip_Tot_D1")
  Totalize (1,1,IEEE4,NOT (FTrigErr_D1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_TrigErr_Tot_D1")

  Average (1,PTemp_C,IEEE4,False)
  Average (1,BattV,IEEE4,False)
EndTable


'---------------------------------------------
' MAIN PROGRAM 
'---------------------------------------------
BeginProg

'set original variables to NaN
Move (sonic(1),25,NaN,1)
Move (monitor(1),20,NaN,1)
	
'Set all LI-7500 variables to NaN.
Move (irga(1),16,NaN,1)
Move (LI7500(1),4,NaN,1)
Move (mco2(1),4,NaN,1)

'Set FW variables to NaN.
Move (FW(1),5,NaN,1)
	
'Set 3.3 VDC for pps
PortPairConfig (C1, 2)

'Set SDM clock speed
SDMSpeed (SDM_PER)

Scan (SCN_INTV, mSec, SCAN_BUFFER_SIZE, 0)
  'GPS16X-HVS
  GPS (gps_data(1),GPS16X_COM,UTC_OFFSET*3600,MAX_CLOCK_DRIFT,nmea_sentence(1))

  'Trigger all SDM instruments to make measurements
  SDMTrigger()

  PanelTemp (PTemp_C,250) 'Measure data logger panel temperature

  'FW3 fine-wire thermocouple
  TCDiff (FW(1), 5, mV200, FW_ANALOG_INPUT, TypeE, PTemp_C, TRUE, 450, 250, 1, 0)

  'CSAT3B three dimensional sonic anemometer 
  CSAT3B(sonic(1),0,CSAT_SDM_ADDR_D5,0)
  CSAT3B(sonic(6),0,CSAT_SDM_ADDR_D4,0)
  CSAT3B(sonic(11),0,CSAT_SDM_ADDR_D3,0)
  CSAT3B(sonic(16),0,CSAT_SDM_ADDR_D2,0)
  CSAT3B(sonic(21),0,CSAT_SDM_ADDR_D1,0)

  'LI7500RS/LI7500 infrared CO2/H2O gas analyzer
  CS7500(irga(1),1,IRGA_SDM_ADDR_D5,7)
  CS7500(LI7500(1),1,IRGA_SDM_ADDR_D4,6)
  CS7500(irga(9),1,IRGA_SDM_ADDR_D3,7)
  CS7500(irga(13),1,IRGA_SDM_ADDR_D2,7)

  'Break up the sonic warning flags into separate bits.
  diag_integer = diag_sonic_D5
  diag_bits_sonic(1) = diag_integer AND &h00000001
  diag_bits_sonic(2) = diag_integer AND &h00000002
  diag_bits_sonic(3) = diag_integer AND &h00000004
  diag_bits_sonic(4) = diag_integer AND &h00000008
  diag_bits_sonic(5) = diag_integer AND &h00000010
  diag_bits_sonic(6) = diag_integer AND &h00000020
  diag_bits_sonic(7) = diag_integer AND &h00000040
  diag_bits_sonic(8) = diag_integer AND &h00000080
  diag_bits_sonic(9) = diag_integer AND &h00000100
  'Turn on this intermediate processing disable flag when any
  'warning flag is set or the data returned is NaN
  disable_stats_sonic(1) = ((diag_integer AND &hffffffff) OR (diag_sonic_D5 = NaN))
  'Turn on this intermediate processing disable flag only when
  'CSAT3B diagnostic warning flags are set
  disable_stats_sonic(2) = ((diag_integer AND &hffffffff) AND NOT (diag_sonic_D5 = NaN))

  'Break up the sonic warning flags into separate bits.
  diag_integer = diag_sonic_D4
  diag_bits_sonic(1) = diag_integer AND &h00000001
  diag_bits_sonic(2) = diag_integer AND &h00000002
  diag_bits_sonic(3) = diag_integer AND &h00000004
  diag_bits_sonic(4) = diag_integer AND &h00000008
  diag_bits_sonic(5) = diag_integer AND &h00000010
  diag_bits_sonic(6) = diag_integer AND &h00000020
  diag_bits_sonic(7) = diag_integer AND &h00000040
  diag_bits_sonic(8) = diag_integer AND &h00000080
  diag_bits_sonic(9) = diag_integer AND &h00000100
  'Turn on this intermediate processing disable flag when any
  'warning flag is set or the data returned is NaN
  disable_stats_sonic(3) = ((diag_integer AND &hffffffff) OR (diag_sonic_D4 = NaN))
  'Turn on this intermediate processing disable flag only when
  'CSAT3B diagnostic warning flags are set
  disable_stats_sonic(4) = ((diag_integer AND &hffffffff) AND NOT (diag_sonic_D4 = NaN))
 
  diag_integer = diag_sonic_D3
  diag_bits_sonic(10) = diag_integer AND &h00000001
  diag_bits_sonic(11) = diag_integer AND &h00000002
  diag_bits_sonic(12) = diag_integer AND &h00000004
  diag_bits_sonic(13) = diag_integer AND &h00000008
  diag_bits_sonic(14) = diag_integer AND &h00000010
  diag_bits_sonic(15) = diag_integer AND &h00000020
  diag_bits_sonic(16) = diag_integer AND &h00000040
  diag_bits_sonic(17) = diag_integer AND &h00000080
  diag_bits_sonic(18) = diag_integer AND &h00000100
  'Turn on this intermediate processing disable flag when any
  'warning flag is set or the data returned is NaN
  disable_stats_sonic(5) = ((diag_integer AND &hffffffff) OR (diag_sonic_D3 = NaN))
  'Turn on this intermediate processing disable flag only when
  'CSAT3B diagnostic warning flags are set
  disable_stats_sonic(6) = ((diag_integer AND &hffffffff) AND NOT (diag_sonic_D3 = NaN))

  diag_integer = diag_sonic_D2
  diag_bits_sonic(19) = diag_integer AND &h00000001
  diag_bits_sonic(20) = diag_integer AND &h00000002
  diag_bits_sonic(21) = diag_integer AND &h00000004
  diag_bits_sonic(22) = diag_integer AND &h00000008
  diag_bits_sonic(23) = diag_integer AND &h00000010
  diag_bits_sonic(24) = diag_integer AND &h00000020
  diag_bits_sonic(25) = diag_integer AND &h00000040
  diag_bits_sonic(26) = diag_integer AND &h00000080
  diag_bits_sonic(27) = diag_integer AND &h00000100
  'Turn on this intermediate processing disable flag when any
  'warning flag is set or the data returned is NaN
  disable_stats_sonic(7) = ((diag_integer AND &hffffffff) OR (diag_sonic_D2 = NaN))
  'Turn on this intermediate processing disable flag only when
  'CSAT3B diagnostic warning flags are set
  disable_stats_sonic(8) = ((diag_integer AND &hffffffff) AND NOT (diag_sonic_D2 = NaN))

  diag_integer = diag_sonic_D1
  diag_bits_sonic(28) = diag_integer AND &h00000001
  diag_bits_sonic(29) = diag_integer AND &h00000002
  diag_bits_sonic(30) = diag_integer AND &h00000004
  diag_bits_sonic(31) = diag_integer AND &h00000008
  diag_bits_sonic(32) = diag_integer AND &h00000010
  diag_bits_sonic(33) = diag_integer AND &h00000020
  diag_bits_sonic(34) = diag_integer AND &h00000040
  diag_bits_sonic(35) = diag_integer AND &h00000080
  diag_bits_sonic(36) = diag_integer AND &h00000100
  'Turn on this intermediate processing disable flag when any
  'warning flag is set or the data returned is NaN
  disable_stats_sonic(9) = ((diag_integer AND &hffffffff) OR (diag_sonic_D1 = NaN))
  'Turn on this intermediate processing disable flag only when
  'CSAT3B diagnostic warning flags are set
  disable_stats_sonic(10) = ((diag_integer AND &hffffffff) AND NOT (diag_sonic_D1 = NaN))

  'LI7500
  co2_D4 = LI7500(1)
  h2o_D4 = LI7500(2)
  Press_irga_D4 = LI7500(3)
  sig_irga_D4 = INT ((LI7500(4) AND &h000f) * 6.25)

  
  '-------------------------------------------------------------------
  'Convert LI-7500 data from molar density [mmol/m^3] to mass density.
  ' 44 [g/mol] - molecular weight of carbon dioxide
  ' 0.018 [g/mmol] - molecular weight of water vapor
  '-------------------------------------------------------------------
  If ( NOT (co2_D5 = -99999) ) Then ( co2_D5 = co2_D5*44 )
  h2o_D5 = h2o_D5*0.018
  If ( NOT (co2_D4 = -99999) ) Then ( co2_D4 = co2_D4*44 )
  h2o_D4 = h2o_D4*0.018
  If ( NOT (co2_D3 = -99999) ) Then ( co2_D3 = co2_D3*44 )
  h2o_D3 = h2o_D3*0.018
  If ( NOT (co2_D2 = -99999) ) Then ( co2_D2 = co2_D2*44 )
  h2o_D2 = h2o_D2*0.018
   
  'Compute CO2 molar density by molar fraction (ppm)
  divisor = (Press_irga_D5/(R*(Ts_D5+273.15)))-(h2o_D5/18)
  mco2_D5 = co2_D5/(0.04401*divisor)
  divisor = (Press_irga_D4/(R*(Ts_D4+273.15)))-(h2o_D4/18)
  mco2_D4 = co2_D4/(0.04401*divisor)
  divisor = (Press_irga_D3/(R*(Ts_D3+273.15)))-(h2o_D3/18)
  mco2_D3 = co2_D3/(0.04401*divisor)
  divisor = (Press_irga_D2/(R*(Ts_D2+273.15)))-(h2o_D2/18)
  mco2_D2 = co2_D2/(0.04401*divisor)
  
  'Save time series data.
  CallTable Time_Series

  'Save meterological data
  CallTable RMet_1Min

  'Save status data
  CallTable Stats_30Min

NextScan

SlowSequence

Scan (SLW_SCN_INTV,mSec,10,0)


  Battery (BattV)         'Measure battery voltage.

  'CSAT3B three dimensional sonic anemometer 
  CSAT3BMonitor(monitor(1),0,CSAT_SDM_ADDR_D5)
  CSAT3BMonitor(monitor(5),0,CSAT_SDM_ADDR_D4)
  CSAT3BMonitor(monitor(9),0,CSAT_SDM_ADDR_D3)
  CSAT3BMonitor(monitor(13),0,CSAT_SDM_ADDR_D2)
  CSAT3BMonitor(monitor(17),0,CSAT_SDM_ADDR_D1)

NextScan

EndProg
